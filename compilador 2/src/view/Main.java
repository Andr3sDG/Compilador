/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.TextLineNumber;
import controller.intermediary;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author coffeeleak
 */
public class Main extends javax.swing.JFrame {

    intermediary in = new intermediary();
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        in.load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        global = new javax.swing.JTabbedPane();
        principal = new javax.swing.JPanel();
        tokenArea = new javax.swing.JScrollPane();
        token = new javax.swing.JTable();
        errorArea = new javax.swing.JScrollPane();
        error = new javax.swing.JTable();
        codeArea = new javax.swing.JScrollPane();
        code = new javax.swing.JTextArea();
        ambito = new javax.swing.JPanel();
        bdAmbito = new javax.swing.JScrollPane();
        tableAmbit = new javax.swing.JTable();
        bdContadores = new javax.swing.JScrollPane();
        tableAmbitCounter = new javax.swing.JTable();
        mostrarBD = new javax.swing.JButton();
        bdTipo = new javax.swing.JScrollPane();
        tableTypes = new javax.swing.JTable();
        bdLista = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        semantica1 = new javax.swing.JPanel();
        menu = new javax.swing.JMenuBar();
        record = new javax.swing.JMenu();
        load = new javax.swing.JRadioButtonMenuItem();
        compile = new javax.swing.JRadioButtonMenuItem();
        separator = new javax.swing.JPopupMenu.Separator();
        clean = new javax.swing.JRadioButtonMenuItem();
        export = new javax.swing.JMenu();
        errors = new javax.swing.JRadioButtonMenuItem();
        ambit = new javax.swing.JRadioButtonMenuItem();
        vars = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        global.setBackground(new java.awt.Color(40, 48, 68));

        principal.setBackground(new java.awt.Color(40, 48, 86));

        tokenArea.setBackground(new java.awt.Color(89, 65, 87));

        token.setBackground(new java.awt.Color(255, 255, 255));
        token.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Lexema", "Linea"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tokenArea.setViewportView(token);

        error.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. error", "Lexema", "Tipo de error", "Descripcion", "Linea"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        errorArea.setViewportView(error);

        codeArea.setViewportView(code);
        TextLineNumber tln = new TextLineNumber(code);
        codeArea.setRowHeaderView(tln);

        code.setColumns(20);
        code.setRows(5);
        codeArea.setViewportView(code);

        javax.swing.GroupLayout principalLayout = new javax.swing.GroupLayout(principal);
        principal.setLayout(principalLayout);
        principalLayout.setHorizontalGroup(
            principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(principalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tokenArea, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorArea, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
                    .addComponent(codeArea))
                .addContainerGap())
        );
        principalLayout.setVerticalGroup(
            principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tokenArea, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(principalLayout.createSequentialGroup()
                        .addComponent(codeArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorArea, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        global.addTab("PRINCIPAL", principal);

        ambito.setBackground(new java.awt.Color(40, 48, 86));

        tableAmbit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TIPO", "CLASE", "AMBITO", "TARR", "DIMARR", "NOPAR", "TPAR", "NOMBRE ACTUAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bdAmbito.setViewportView(tableAmbit);
        if (tableAmbit.getColumnModel().getColumnCount() > 0) {
            tableAmbit.getColumnModel().getColumn(0).setResizable(false);
            tableAmbit.getColumnModel().getColumn(1).setResizable(false);
            tableAmbit.getColumnModel().getColumn(2).setResizable(false);
            tableAmbit.getColumnModel().getColumn(3).setResizable(false);
            tableAmbit.getColumnModel().getColumn(4).setResizable(false);
            tableAmbit.getColumnModel().getColumn(5).setResizable(false);
            tableAmbit.getColumnModel().getColumn(6).setResizable(false);
            tableAmbit.getColumnModel().getColumn(7).setResizable(false);
            tableAmbit.getColumnModel().getColumn(8).setResizable(false);
        }

        tableAmbitCounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AMBITO", "VARIABLES", "CONSTANTES", "FUNCIONES", "PROCEDURES", "ARREGLOS", "PARAMETROS", "PARAMETROS ARREGLOS", "AMBITOS USADOS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bdContadores.setViewportView(tableAmbitCounter);
        if (tableAmbitCounter.getColumnModel().getColumnCount() > 0) {
            tableAmbitCounter.getColumnModel().getColumn(0).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(1).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(2).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(3).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(4).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(5).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(6).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(7).setResizable(false);
            tableAmbitCounter.getColumnModel().getColumn(8).setResizable(false);
        }

        mostrarBD.setText("Cargar tablas");
        mostrarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarBDActionPerformed(evt);
            }
        });

        tableTypes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AMBITO", "INTEGER", "REAL", "EXPONENCIAL", "STRING", "CHAR", "BOOL", "FILE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bdTipo.setViewportView(tableTypes);
        if (tableTypes.getColumnModel().getColumnCount() > 0) {
            tableTypes.getColumnModel().getColumn(0).setResizable(false);
            tableTypes.getColumnModel().getColumn(1).setResizable(false);
            tableTypes.getColumnModel().getColumn(2).setResizable(false);
            tableTypes.getColumnModel().getColumn(3).setResizable(false);
            tableTypes.getColumnModel().getColumn(4).setResizable(false);
            tableTypes.getColumnModel().getColumn(5).setResizable(false);
            tableTypes.getColumnModel().getColumn(6).setResizable(false);
            tableTypes.getColumnModel().getColumn(7).setResizable(false);
        }

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "AMBITO", "NOMBRE ACTUAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bdLista.setViewportView(tableList);
        if (tableList.getColumnModel().getColumnCount() > 0) {
            tableList.getColumnModel().getColumn(0).setResizable(false);
            tableList.getColumnModel().getColumn(1).setResizable(false);
            tableList.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout ambitoLayout = new javax.swing.GroupLayout(ambito);
        ambito.setLayout(ambitoLayout);
        ambitoLayout.setHorizontalGroup(
            ambitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ambitoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ambitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bdAmbito)
                    .addComponent(bdContadores)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ambitoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(ambitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bdLista, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mostrarBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        ambitoLayout.setVerticalGroup(
            ambitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ambitoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bdAmbito, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bdContadores, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ambitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ambitoLayout.createSequentialGroup()
                        .addComponent(bdLista, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mostrarBD)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        global.addTab("AMBITO", ambito);

        javax.swing.GroupLayout semantica1Layout = new javax.swing.GroupLayout(semantica1);
        semantica1.setLayout(semantica1Layout);
        semantica1Layout.setHorizontalGroup(
            semantica1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 930, Short.MAX_VALUE)
        );
        semantica1Layout.setVerticalGroup(
            semantica1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );

        global.addTab("SEMANTICA 1", semantica1);

        record.setText("Archivo");

        load.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.META_MASK));
        load.setSelected(true);
        load.setText("Cargar");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });
        record.add(load);

        compile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_MASK));
        compile.setSelected(true);
        compile.setText("Compilar");
        compile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileActionPerformed(evt);
            }
        });
        record.add(compile);
        record.add(separator);

        clean.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.META_MASK));
        clean.setSelected(true);
        clean.setText("Limpiar");
        clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanActionPerformed(evt);
            }
        });
        record.add(clean);

        menu.add(record);

        export.setText("Exportar");

        errors.setSelected(true);
        errors.setText("Errores");
        errors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorsActionPerformed(evt);
            }
        });
        export.add(errors);

        ambit.setSelected(true);
        ambit.setText("Ambito");
        ambit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambitActionPerformed(evt);
            }
        });
        export.add(ambit);

        vars.setSelected(true);
        vars.setText("Lista de variables");
        vars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varsActionPerformed(evt);
            }
        });
        export.add(vars);

        menu.add(export);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(global)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(global, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        in.read(error, token, code);
    }//GEN-LAST:event_loadActionPerformed

    private void cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanActionPerformed
        // TODO add your handling code here:
        in.clean(code, error, token);
    }//GEN-LAST:event_cleanActionPerformed

    private void compileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileActionPerformed
        // TODO add your handling code here:
        in.compile(error, token);
    }//GEN-LAST:event_compileActionPerformed

    private void mostrarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarBDActionPerformed
        // TODO add your handling code here:
        in.showTable(tableAmbit);
        in.showTable2(tableAmbitCounter);
        in.showTable3(tableTypes);
        in.showTable4(tableList);
    }//GEN-LAST:event_mostrarBDActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        in.closeWindow();
    }//GEN-LAST:event_formWindowClosing

    private void ambitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambitActionPerformed
        // TODO add your handling code here:
        try {
            in.exportAmbit(tableAmbit, tableAmbitCounter, tableList);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ambitActionPerformed

    private void errorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorsActionPerformed
        // TODO add your handling code here:
        try {
            in.exportErrors(error);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_errorsActionPerformed

    private void varsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varsActionPerformed
        // TODO add your handling code here:
        try {
            in.exportVarsList(tableList);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_varsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem ambit;
    private javax.swing.JPanel ambito;
    private javax.swing.JScrollPane bdAmbito;
    private javax.swing.JScrollPane bdContadores;
    private javax.swing.JScrollPane bdLista;
    private javax.swing.JScrollPane bdTipo;
    private javax.swing.JRadioButtonMenuItem clean;
    private javax.swing.JTextArea code;
    private javax.swing.JScrollPane codeArea;
    private javax.swing.JRadioButtonMenuItem compile;
    private javax.swing.JTable error;
    private javax.swing.JScrollPane errorArea;
    private javax.swing.JRadioButtonMenuItem errors;
    private javax.swing.JMenu export;
    private javax.swing.JTabbedPane global;
    private javax.swing.JRadioButtonMenuItem load;
    private javax.swing.JMenuBar menu;
    private javax.swing.JButton mostrarBD;
    private javax.swing.JPanel principal;
    private javax.swing.JMenu record;
    private javax.swing.JPanel semantica1;
    private javax.swing.JPopupMenu.Separator separator;
    private javax.swing.JTable tableAmbit;
    private javax.swing.JTable tableAmbitCounter;
    private javax.swing.JTable tableList;
    private javax.swing.JTable tableTypes;
    private javax.swing.JTable token;
    private javax.swing.JScrollPane tokenArea;
    private javax.swing.JRadioButtonMenuItem vars;
    // End of variables declaration//GEN-END:variables
}
